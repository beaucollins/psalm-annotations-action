[{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/blocks.js","messages":[{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":8,"column":9,"nodeType":"JSXOpeningElement","endLine":8,"endColumn":50,"fix":{"range":[136,144],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":9,"column":13,"nodeType":"JSXOpeningElement","endLine":16,"endColumn":19,"fix":{"range":[186,198],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":9,"column":40,"nodeType":"JSXExpressionContainer","fix":{"range":[226,226],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":9,"column":111,"nodeType":"JSXExpressionContainer","fix":{"range":[296,296],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":9,"column":126,"nodeType":"JSXExpressionContainer","fix":{"range":[312,312],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":9,"column":132,"nodeType":"JSXExpressionContainer","fix":{"range":[317,317],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":9,"column":143,"nodeType":"JSXExpressionContainer","fix":{"range":[329,329],"text":" "}}],"errorCount":7,"warningCount":0,"fixableErrorCount":7,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport {InnerBlocks} from \"@wordpress/block-editor\";\n\nexport default function Blocks() {\n    return (\n        <div className=\"premium-content-wrapper\">\n            <InnerBlocks allowedBlocks={['premium-content/subscriber-view', 'premium-content/logged-out-view']} templateLock={'all'} template={[\n                [\n                    'premium-content/subscriber-view'\n                ],\n                [\n                    'premium-content/logged-out-view'\n                ]\n            ] } />\n        </div>\n    );\n}"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/context.js","messages":[{"ruleId":"jsdoc/valid-types","severity":1,"message":"Tag @type must have a type","line":13,"column":null,"nodeType":"Block","endLine":13,"endColumn":null},{"ruleId":"jsdoc/no-undefined-types","severity":1,"message":"The type 'React' is undefined.","line":18,"column":null,"nodeType":"Block","endLine":18,"endColumn":null},{"ruleId":"no-unused-vars","severity":2,"message":"'_isSelected' is defined but never used.","line":22,"column":34,"nodeType":"Identifier","endLine":22,"endColumn":45}],"errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport { createContext } from '@wordpress/element';\n\n/**\n * @typedef {import('./tab').Tab} Tab\n * @typedef {(isSelected: boolean) => void} Callback\n * @typedef {{selectedTab: Tab, selectedInnerBlockCallback: Callback}} TabbedInterface\n */\n\n/**\n * @type Tab\n */\nconst defaultTab = {id: '', className: '', label: <></>};\n\n/**\n * @type {React.Context<TabbedInterface>}\n */\nconst Context = createContext( {\n    selectedTab: defaultTab,\n    selectedInnerBlockCallback: (_isSelected) => {},\n} );\n\nexport default Context;"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/controls.js","messages":[{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nselectedPlanId: number,\nonSelected: (plan: Plan) => void\nclassName: string\nplans: Array<Plan>\n}","line":18,"column":null,"nodeType":"Block","endLine":18,"endColumn":null},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":35,"column":9,"nodeType":"JSXOpeningElement","endLine":35,"endColumn":24,"fix":{"range":[778,786],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":36,"column":13,"nodeType":"JSXOpeningElement","endLine":36,"endColumn":22,"fix":{"range":[802,814],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":37,"column":17,"nodeType":"JSXOpeningElement","endLine":46,"endColumn":18,"fix":{"range":[824,840],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":39,"column":21,"nodeType":"JSXAttribute","endLine":43,"endColumn":22,"fix":{"range":[927,947],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":40,"column":25,"nodeType":"JSXOpeningElement","endLine":40,"endColumn":35,"fix":{"range":[954,978],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":41,"column":29,"nodeType":"JSXOpeningElement","endLine":41,"endColumn":54,"fix":{"range":[989,1017],"text":"\t"}},{"ruleId":"react/jsx-tag-spacing","severity":2,"message":"A space is required before closing bracket","line":41,"column":52,"nodeType":"JSXOpeningElement","fix":{"range":[1040,1040],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":41,"column":85,"nodeType":"JSXExpressionContainer","fix":{"range":[1074,1074],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":41,"column":103,"nodeType":"JSXExpressionContainer","fix":{"range":[1091,1091],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":41,"column":107,"nodeType":"JSXExpressionContainer","fix":{"range":[1096,1096],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":41,"column":125,"nodeType":"JSXExpressionContainer","fix":{"range":[1113,1113],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":41,"column":127,"nodeType":"JSXExpressionContainer","fix":{"range":[1116,1116],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":41,"column":148,"nodeType":"JSXExpressionContainer","fix":{"range":[1136,1136],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":41,"column":152,"nodeType":"JSXExpressionContainer","fix":{"range":[1141,1141],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":41,"column":173,"nodeType":"JSXExpressionContainer","fix":{"range":[1161,1161],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":44,"column":21,"nodeType":"JSXAttribute","endLine":44,"endColumn":69,"fix":{"range":[1237,1257],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":44,"column":27,"nodeType":"JSXExpressionContainer","fix":{"range":[1264,1264],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":44,"column":68,"nodeType":"JSXExpressionContainer","fix":{"range":[1304,1304],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":45,"column":21,"nodeType":"JSXAttribute","endLine":45,"endColumn":65,"fix":{"range":[1306,1326],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":45,"column":31,"nodeType":"JSXExpressionContainer","fix":{"range":[1337,1337],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":45,"column":64,"nodeType":"JSXExpressionContainer","fix":{"range":[1369,1369],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":47,"column":21,"nodeType":"JSXExpressionContainer","endLine":60,"endColumn":24,"fix":{"range":[1389,1409],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":48,"column":25,"nodeType":"JSXOpeningElement","endLine":48,"endColumn":35,"fix":{"range":[1432,1456],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":49,"column":29,"nodeType":"JSXOpeningElement","endLine":54,"endColumn":31,"fix":{"range":[1467,1495],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":50,"column":33,"nodeType":"JSXSpreadAttribute","endLine":50,"endColumn":45,"fix":{"range":[1502,1534],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":51,"column":33,"nodeType":"JSXAttribute","endLine":51,"endColumn":56,"fix":{"range":[1547,1579],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":51,"column":44,"nodeType":"JSXExpressionContainer","fix":{"range":[1591,1591],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":51,"column":55,"nodeType":"JSXExpressionContainer","fix":{"range":[1601,1601],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":52,"column":33,"nodeType":"JSXAttribute","endLine":52,"endColumn":50,"fix":{"range":[1603,1635],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":52,"column":41,"nodeType":"JSXExpressionContainer","fix":{"range":[1644,1644],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":52,"column":49,"nodeType":"JSXExpressionContainer","fix":{"range":[1651,1651],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":53,"column":33,"nodeType":"JSXAttribute","endLine":53,"endColumn":59,"fix":{"range":[1653,1685],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":53,"column":46,"nodeType":"JSXExpressionContainer","fix":{"range":[1699,1699],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":53,"column":58,"nodeType":"JSXExpressionContainer","fix":{"range":[1710,1710],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":55,"column":29,"nodeType":"JSXOpeningElement","endLine":58,"endColumn":31,"fix":{"range":[1743,1771],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":56,"column":33,"nodeType":"JSXSpreadAttribute","endLine":56,"endColumn":45,"fix":{"range":[1780,1812],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":57,"column":33,"nodeType":"JSXAttribute","endLine":57,"endColumn":50,"fix":{"range":[1825,1857],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":57,"column":41,"nodeType":"JSXExpressionContainer","fix":{"range":[1866,1866],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":57,"column":49,"nodeType":"JSXExpressionContainer","fix":{"range":[1873,1873],"text":" "}}],"errorCount":39,"warningCount":1,"fixableErrorCount":39,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { BlockControls } from '@wordpress/block-editor';\nimport {Dashicon, DropdownMenu, Toolbar} from \"@wordpress/components\";\nimport {__} from \"@wordpress/i18n\";\n\n/**\n * Internal dependencies\n */\nimport Plans from './plans';\nimport NewPlan from './new-plan';\n\n/**\n * @typedef {import('./plans').Plan} Plan\n *\n * @typedef {{\n *  selectedPlanId: number,\n *  onSelected: (plan: Plan) => void\n *  className: string\n *  plans: Array<Plan>\n * }} Props\n *\n * @param {Props} props\n */\nexport default function Controls( props ) {\n    const {\n        selectedPlanId,\n        onSelected,\n        plans,\n    } = props;\n\tconst currentPlan = plans.find( plan => ( plan.id === selectedPlanId ) );\n    return (\n        <BlockControls>\n            <Toolbar>\n                <DropdownMenu\n                    // @ts-ignore We want a label with our Dashicon.Icon\n                    icon={\n                        <Fragment>\n                            <Dashicon icon=\"update\"/> { currentPlan && ( <Fragment> {currentPlan.title} : {currentPlan.price} {currentPlan.currency} / {currentPlan.interval} </Fragment> ) }\n                        </Fragment>\n                    }\n                    label={__( 'Select a plan', 'premium-content' )}\n                    className={'premium-content-toolbar-button'}\n                >\n                    { ( { onClose } ) => (\n                        <Fragment>\n                            <Plans\n                                { ...props }\n                                onSelected={onSelected}\n                                onClose={onClose}\n                                selectedPlan={currentPlan}\n                            />\n                            <NewPlan\n                                { ...props }\n                                onClose={onClose}\n                            />\n                        </Fragment>\n                    ) }\n                </DropdownMenu>\n            </Toolbar>\n        </BlockControls>\n    );\n}"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/edit.js","messages":[{"ruleId":"jsdoc/valid-types","severity":1,"message":"Tag @type must have a type","line":23,"column":null,"nodeType":"Block","endLine":23,"endColumn":null},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":29,"column":13,"nodeType":"JSXOpeningElement","endLine":29,"endColumn":19,"fix":{"range":[556,568],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":29,"column":19,"nodeType":"JSXExpressionContainer","fix":{"range":[575,575],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":29,"column":62,"nodeType":"JSXExpressionContainer","fix":{"range":[617,617],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":36,"column":13,"nodeType":"JSXOpeningElement","endLine":36,"endColumn":19,"fix":{"range":[743,755],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":36,"column":19,"nodeType":"JSXExpressionContainer","fix":{"range":[762,762],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":36,"column":62,"nodeType":"JSXExpressionContainer","fix":{"range":[804,804],"text":" "}},{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nreadonly isSelected: boolean\nreadonly className: string\nreadonly attributes: Attributes\nreadonly setAttributes: (attributes: Partial<Attributes>) => void\n}","line":56,"column":null,"nodeType":"Block","endLine":56,"endColumn":null},{"ruleId":"no-unused-vars","severity":2,"message":"'connectURL' is assigned a value but never used.","line":70,"column":10,"nodeType":"Identifier","endLine":70,"endColumn":20},{"ruleId":"no-unused-vars","severity":2,"message":"'apiState' is assigned a value but never used.","line":72,"column":10,"nodeType":"Identifier","endLine":72,"endColumn":18},{"ruleId":"no-unused-vars","severity":2,"message":"'shouldUpgrade' is assigned a value but never used.","line":74,"column":10,"nodeType":"Identifier","endLine":74,"endColumn":23},{"ruleId":"no-unused-vars","severity":2,"message":"'upgradeURL' is assigned a value but never used.","line":76,"column":10,"nodeType":"Identifier","endLine":76,"endColumn":20},{"ruleId":"no-unused-vars","severity":2,"message":"'siteSlug' is assigned a value but never used.","line":78,"column":10,"nodeType":"Identifier","endLine":78,"endColumn":18},{"ruleId":"jsdoc/valid-types","severity":1,"message":"Tag @type must have a type","line":102,"column":null,"nodeType":"Block","endLine":102,"endColumn":null},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":120,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":120,"endColumn":16},{"ruleId":"jsdoc/no-undefined-types","severity":1,"message":"The type 'React' is undefined.","line":134,"column":null,"nodeType":"Block","endLine":134,"endColumn":null},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":153,"column":28,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":153,"endColumn":30},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":162,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":162,"endColumn":32},{"ruleId":"no-unused-expressions","severity":2,"message":"Expected an assignment or function call and instead saw an expression.","line":165,"column":5,"nodeType":"ExpressionStatement","endLine":165,"endColumn":55},{"ruleId":"jsdoc/require-param","severity":1,"message":"Missing JSDoc @param \"result\" declaration.","line":175,"column":13,"nodeType":"Block","endLine":177,"endColumn":16,"fix":{"range":[4957,5014],"text":"/**\n * @param result\n * @param { Error } error\n */"}},{"ruleId":"jsdoc/check-param-names","severity":1,"message":"Expected @param names to be \"result\". Got \"error\".","line":176,"column":null,"nodeType":"Block","endLine":176,"endColumn":null},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":181,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":181,"endColumn":16},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":187,"column":9,"nodeType":"JSXOpeningElement","endLine":187,"endColumn":55,"fix":{"range":[5221,5229],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":187,"column":42,"nodeType":"JSXExpressionContainer","fix":{"range":[5263,5263],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":187,"column":53,"nodeType":"JSXExpressionContainer","fix":{"range":[5273,5273],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":188,"column":13,"nodeType":"JSXExpressionContainer","endLine":195,"endColumn":16,"fix":{"range":[5276,5288],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":190,"column":21,"nodeType":"JSXSpreadAttribute","endLine":190,"endColumn":33,"fix":{"range":[5358,5378],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":191,"column":21,"nodeType":"JSXAttribute","endLine":191,"endColumn":39,"fix":{"range":[5391,5411],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":192,"column":21,"nodeType":"JSXAttribute","endLine":192,"endColumn":71,"fix":{"range":[5430,5450],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":193,"column":21,"nodeType":"JSXAttribute","endLine":193,"endColumn":44,"fix":{"range":[5501,5521],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":193,"column":32,"nodeType":"JSXExpressionContainer","fix":{"range":[5533,5533],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":193,"column":43,"nodeType":"JSXExpressionContainer","fix":{"range":[5543,5543],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":196,"column":13,"nodeType":"JSXExpressionContainer","endLine":201,"endColumn":16,"fix":{"range":[5580,5592],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":198,"column":21,"nodeType":"JSXSpreadAttribute","endLine":198,"endColumn":33,"fix":{"range":[5663,5683],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":199,"column":21,"nodeType":"JSXAttribute","endLine":199,"endColumn":40,"fix":{"range":[5696,5716],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":199,"column":30,"nodeType":"JSXExpressionContainer","fix":{"range":[5726,5726],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":199,"column":39,"nodeType":"JSXExpressionContainer","fix":{"range":[5734,5734],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":202,"column":13,"nodeType":"JSXExpressionContainer","endLine":209,"endColumn":16,"fix":{"range":[5771,5783],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":204,"column":21,"nodeType":"JSXSpreadAttribute","endLine":204,"endColumn":33,"fix":{"range":[5849,5869],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":205,"column":21,"nodeType":"JSXAttribute","endLine":205,"endColumn":32,"fix":{"range":[5882,5902],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":205,"column":26,"nodeType":"JSXExpressionContainer","fix":{"range":[5908,5908],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":205,"column":31,"nodeType":"JSXExpressionContainer","fix":{"range":[5912,5912],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":206,"column":21,"nodeType":"JSXAttribute","endLine":206,"endColumn":46,"fix":{"range":[5914,5934],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":206,"column":33,"nodeType":"JSXExpressionContainer","fix":{"range":[5947,5947],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":206,"column":45,"nodeType":"JSXExpressionContainer","fix":{"range":[5958,5958],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":207,"column":21,"nodeType":"JSXAttribute","endLine":207,"endColumn":43,"fix":{"range":[5960,5980],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":207,"column":32,"nodeType":"JSXExpressionContainer","fix":{"range":[5992,5992],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":207,"column":42,"nodeType":"JSXExpressionContainer","fix":{"range":[6001,6001],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":210,"column":13,"nodeType":"JSXOpeningElement","endLine":213,"endColumn":16,"fix":{"range":[6038,6050],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":210,"column":37,"nodeType":"JSXExpressionContainer","fix":{"range":[6075,6075],"text":" "}},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":211,"column":17,"nodeType":"Property","endLine":211,"endColumn":41,"fix":{"range":[6093,6117],"text":"selectedTab"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":213,"column":14,"nodeType":"JSXExpressionContainer","fix":{"range":[6227,6227],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":214,"column":17,"nodeType":"JSXOpeningElement","endLine":214,"endColumn":27,"fix":{"range":[6230,6246],"text":"\t"}},{"ruleId":"jsdoc/no-undefined-types","severity":1,"message":"The type 'React' is undefined.","line":223,"column":null,"nodeType":"Block","endLine":223,"endColumn":null}],"errorCount":47,"warningCount":7,"fixableErrorCount":37,"fixableWarningCount":1,"source":"/**\n * WordPress dependencies\n */\nimport { useEffect, useState, useRef } from '@wordpress/element';\nimport {__} from \"@wordpress/i18n\";\n\n/**\n * Internal dependencies\n */\nimport Tabs from './tabs';\nimport Blocks from \"./blocks\";\nimport Controls from \"./controls\";\nimport Inspector from \"./inspector\";\nimport Context from \"./context\";\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * @typedef { import('./plan').Plan } Plan\n */\n\n/**\n * @typedef { import('./tabs').Tab } Tab\n * @type Tab[]\n */\nconst tabs = [\n    {\n        id: 'premium',\n        label: (\n            <span>{__( 'Subscriber View', 'premium-content' )}</span>\n        ),\n        className: 'wp-premium-content-subscriber-view'\n    },\n    {\n        id: 'wall',\n        label: (\n            <span>{__( 'Logged Out View', 'premium-content' )}</span>\n        ),\n        className: 'wp-premium-content-logged-out-view'\n    }\n];\n\n\nconst API_STATE_LOADING = 0;\nconst API_STATE_CONNECTED = 1;\nconst API_STATE_NOTCONNECTED = 2;\n\n/**\n * @type {Plan[]}\n */\nconst emptyProducts = [];\n\n/**\n * Block edit function\n *\n * @typedef { import('./').Attributes } Attributes\n * @typedef {{\n *   readonly isSelected: boolean\n *   readonly className: string\n *   readonly attributes: Attributes\n *   readonly setAttributes: (attributes: Partial<Attributes>) => void\n * }} Props\n *\n * @param {Props} props\n */\nexport default function Edit( props ) {\n    const [selectedTab, selectTab] = useState(tabs[1]);\n    const [selectedInnerBlock, hasSelectedInnerBlock] = useState( false );\n    const [ products, setProducts ] = useState( emptyProducts );\n\t// @ts-ignore ConnectURl will be needed for stripe connection flow\n\tconst [ connectURL, setConnectURL ] = useState( null );\n\t// @ts-ignore apiState will be good to have for spinners.\n\tconst [ apiState, setApiState ] = useState( API_STATE_LOADING );\n\t// @ts-ignore shouldupgrade would be good for upgrade nudge\n\tconst [ shouldUpgrade, setShouldUpgrade ] = useState( false );\n\t// @ts-ignore Also needed for Upgrade nudge\n\tconst [ upgradeURL, setUpgradeURL ] = useState( '' );\n\t// @ts-ignore needed in some upgrae flows - depending how we implement this\n\tconst [ siteSlug, setSiteSlug ] = useState( '' );\n\n\t/**\n\t * Hook to save a new plan.\n\t *\n\t * @typedef {import('./inspector').PlanAttributes} PlanAttributes\n\t * @param {PlanAttributes} attributes\n\t */\n\tfunction savePlan( attributes )  {\n\t\tconst path = '/wpcom/v2/memberships/product';\n\t\tconst method = 'POST';\n\t\tconst data = {\n\t\t\tcurrency: attributes.newPlanCurrency,\n\t\t\tprice: attributes.newPlanPrice,\n\t\t\ttitle: attributes.newPlanName,\n\t\t\tinterval: attributes.newPlanInterval,\n\t\t};\n\t\tconst fetch = { path, method, data };\n\t\tapiFetch( fetch ).then(\n            /**\n             * @param {any} result\n             */\n\t\t\tresult => {\n                /**\n                 * @type Plan\n                 */\n\t\t\t\tconst newProduct = {\n\t\t\t\t\tid: result.id,\n\t\t\t\t\ttitle: result.title,\n\t\t\t\t\tinterval: result.interval,\n\t\t\t\t\tprice: result.price,\n\t\t\t\t\tcurrency: result.currency,\n\t\t\t\t};\n\t\t\t\tsetProducts( products.concat( [ newProduct ] ) );\n\t\t\t\t// After successful adding of product, we want to select it. Presumably that is the product user wants.\n\t\t\t\tselectPlan( newProduct );\n            },\n            /**\n             * @param { Error } error\n             */\n\t\t\terror => {\n\t\t\t\t// this.setState( { addingMembershipAmount: PRODUCT_FORM } );\n\t\t\t\tconsole.log( error.message ); // TODO: Some error messages\n\t\t\t}\n\t\t);\n\t}\n\n    /**\n     *\n     * @param {Plan} plan\n     */\n\tfunction selectPlan( plan ) {\n\t\tprops.setAttributes( { selectedPlanId: plan.id } );\n\t}\n    //We would like to hide the tabs and controls when user clicks outside the premium content block\n    /**\n     * @type {React.MutableRefObject<null|HTMLDivElement>}\n     */\n    const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef, hasSelectedInnerBlock);\n\n    const {\n        isSelected,\n        className,\n    } = props;\n\n\tuseEffect( () => {\n\t\tconst path = '/wpcom/v2/memberships/status';\n\t\tconst method = 'GET';\n\t\tconst fetch = { path, method };\n\t\tapiFetch( fetch ).then(\n            /**\n             * @param {any} result\n             */\n\t\t\tresult => {\n                if (result == null && typeof result !== 'object') {\n                    return;\n                }\n\t\t\t\tif (\n\t\t\t\t\tresult.errors &&\n\t\t\t\t\tObject.values( result.errors ) &&\n\t\t\t\t\tObject.values( result.errors )[ 0 ][ 0 ]\n\t\t\t\t) {\n\t\t\t\t\tsetApiState( API_STATE_NOTCONNECTED );\n                    console.log( Object.values( result.errors )[ 0 ][ 0 ] ); // TODO : Have some kind of error msg component\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresult.products && setProducts( result.products );\n\t\t\t\tsetApiState( result.connected_account_id\n\t\t\t\t\t? API_STATE_CONNECTED\n\t\t\t\t\t: API_STATE_NOTCONNECTED\n\t\t\t\t);\n\t\t\t\tsetConnectURL( result.connect_url );\n\t\t\t\tsetShouldUpgrade( result.should_upgrade_to_access_memberships );\n\t\t\t\tsetUpgradeURL( result.upgrade_url );\n\t\t\t\tsetSiteSlug( result.site_slug );\n            },\n            /**\n             * @param { Error } error\n             */\n\t\t\tresult => {\n\t\t\t\tsetConnectURL( null );\n\t\t\t\tsetApiState( API_STATE_NOTCONNECTED );\n\t\t\t\tconsole.log( result.message ); // TODO: Some kind of error msg needed on frontend.\n\t\t\t}\n\t\t);\n\t}, [] );\n\n    return (\n        <div className={ className } ref={wrapperRef}>\n            { ( isSelected || selectedInnerBlock ) && (\n                <Controls\n                    { ...props }\n                    plans={ products }\n                    selectedPlanId={ props.attributes.selectedPlanId }\n                    onSelected={selectPlan}\n                />\n            ) }\n            { ( isSelected || selectedInnerBlock ) && (\n                <Inspector\n                    { ...props }\n                    savePlan={savePlan}\n                />\n            ) }\n            { ( isSelected || selectedInnerBlock ) && (\n                <Tabs\n                    { ...props }\n                    tabs={tabs}\n                    selectedTab={selectedTab}\n                    onSelected={selectTab}\n                />\n            ) }\n            <Context.Provider value={{\n                selectedTab: selectedTab,\n                selectedInnerBlockCallback: ( selected ) => hasSelectedInnerBlock( selected ),\n            }}>\n                <Blocks />\n            </Context.Provider>\n        </div>\n    );\n}\n\n/**\n * Hook that alerts clicks outside of the passed ref\n *\n * @param {React.MutableRefObject<null|HTMLDivElement>} ref\n * @param {(clickedInside: boolean) => void} callback\n */\nfunction useOutsideAlerter( ref, callback ) {\n    /**\n     * Alert if clicked on outside of element\n     *\n     * @param {MouseEvent} event\n     */\n    function handleClickOutside(event) {\n        if (ref.current && event.target && event.target instanceof Node && !ref.current.contains(event.target)) {\n            callback(false);\n        }\n    }\n\n    useEffect(() => {\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    });\n}\n"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/index.js","messages":[{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nnewPlanName: string\nnewPlanCurrency: string\nnewPlanPrice: string\nnewPlanInterval: string\nselectedPlanId: number\n}","line":16,"column":null,"nodeType":"Block","endLine":16,"endColumn":null},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":27,"column":5,"nodeType":"Property","endLine":27,"endColumn":15,"fix":{"range":[553,563],"text":"name"}},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":72,"column":5,"nodeType":"Property","endLine":72,"endColumn":23,"fix":{"range":[1792,1810],"text":"category"}}],"errorCount":2,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport edit from './edit';\nimport save from './save';\n\nconst name = 'premium-content/container';\nconst category = 'common';\n\n/**\n * @typedef {{\n *   newPlanName: string\n *   newPlanCurrency: string\n *   newPlanPrice: string\n *   newPlanInterval: string\n *   selectedPlanId: number\n * }} Attributes\n * @typedef {import('@wordpress/blocks').BlockConfiguration<Attributes>} BlockConfiguration\n * @type {BlockConfiguration}\n */\nconst settings = {\n    name: name,\n    attributes: {\n        newPlanName: {\n            type: 'string',\n            default: 'Monthly Subscription'\n        },\n        newPlanCurrency: {\n            type: 'string',\n            default: 'USD'\n        },\n        newPlanPrice: {\n            type: 'string',\n            default: '5'\n        },\n        newPlanInterval: {\n            type: 'string',\n            default: '1 month'\n        },\n\t\tselectedPlanId: {\n\t\t\ttype: 'number',\n\t\t\tdefault: 0,\n\t\t},\n    },\n    /**\n     * This is the display title for your block, which can be translated with `i18n` functions.\n     * The block inserter will show this name.\n     */\n    title: __(\n        'Premium Content',\n        'premium-content'\n    ),\n\n    /**\n     * This is a short description for your block, can be translated with `i18n` functions.\n     * It will be shown in the Block Tab in the Settings Sidebar.\n     */\n    description: __(\n        'Example block written with ESNext standard and JSX support – build step required.',\n        'premium-content'\n    ),\n\n    /**\n     * Blocks are grouped into categories to help users browse and discover them.\n     * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n     */\n    category: category,\n\n    /**\n     * An icon property should be specified to make it easier to identify a block.\n     * These can be any of WordPress’ Dashicons, or a custom svg element.\n     */\n    icon: 'awards',\n\n    /**\n     * Optional block extended support features.\n     */\n    supports: {\n        // Removes support for an HTML mode.\n        html: false,\n    },\n    keywords: [\n        'premium-content',\n        /* translators: block keyword */\n        __( 'premium', 'premium-content' ),\n        /* translators: block keyword */\n        __( 'paywall', 'premium-content' ),\n    ],\n    edit,\n    save,\n};\n\nexport { name, category, settings };"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/inspector.js","messages":[{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nnewPlanCurrency: string\nnewPlanName: string\nnewPlanPrice: string\nnewPlanInterval: string\n}","line":9,"column":null,"nodeType":"Block","endLine":9,"endColumn":null},{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nlabel: string\nsymbol: string\n}","line":16,"column":null,"nodeType":"Block","endLine":16,"endColumn":null},{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nattributes: PlanAttributes\nsetAttributes: (attributes: Partial<PlanAttributes>) => void\nclassName: string\nsavePlan: (attributes: PlanAttributes) => void\ncurrencies: Currency[]\n}","line":21,"column":null,"nodeType":"Block","endLine":21,"endColumn":null},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":41,"column":9,"nodeType":"JSXOpeningElement","endLine":41,"endColumn":28,"fix":{"range":[894,902],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":42,"column":13,"nodeType":"JSXOpeningElement","endLine":42,"endColumn":123,"fix":{"range":[922,934],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":42,"column":67,"nodeType":"JSXExpressionContainer","fix":{"range":[989,989],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":42,"column":72,"nodeType":"JSXExpressionContainer","fix":{"range":[993,993],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":43,"column":17,"nodeType":"JSXOpeningElement","endLine":43,"endColumn":27,"fix":{"range":[1045,1061],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":44,"column":21,"nodeType":"JSXOpeningElement","endLine":50,"endColumn":23,"fix":{"range":[1072,1092],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":45,"column":25,"nodeType":"JSXAttribute","endLine":45,"endColumn":43,"fix":{"range":[1105,1129],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":46,"column":25,"nodeType":"JSXAttribute","endLine":46,"endColumn":37,"fix":{"range":[1148,1172],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":47,"column":25,"nodeType":"JSXAttribute","endLine":47,"endColumn":55,"fix":{"range":[1185,1209],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":47,"column":31,"nodeType":"JSXExpressionContainer","fix":{"range":[1216,1216],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":47,"column":54,"nodeType":"JSXExpressionContainer","fix":{"range":[1238,1238],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":48,"column":25,"nodeType":"JSXAttribute","endLine":48,"endColumn":43,"fix":{"range":[1240,1264],"text":"\t"}},{"ruleId":"jsx-a11y/no-autofocus","severity":2,"message":"The autoFocus prop should not be used, as it can reduce usability and accessibility for users.","line":48,"column":25,"nodeType":"JSXAttribute","endLine":48,"endColumn":43},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":49,"column":25,"nodeType":"JSXAttribute","endLine":49,"endColumn":83,"fix":{"range":[1283,1307],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":52,"column":17,"nodeType":"JSXOpeningElement","endLine":52,"endColumn":27,"fix":{"range":[1417,1433],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":53,"column":21,"nodeType":"JSXOpeningElement","endLine":62,"endColumn":22,"fix":{"range":[1444,1464],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":54,"column":25,"nodeType":"JSXAttribute","endLine":54,"endColumn":41,"fix":{"range":[1479,1503],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":55,"column":25,"nodeType":"JSXAttribute","endLine":55,"endColumn":87,"fix":{"range":[1520,1544],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":56,"column":25,"nodeType":"JSXAttribute","endLine":56,"endColumn":59,"fix":{"range":[1607,1631],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":56,"column":31,"nodeType":"JSXExpressionContainer","fix":{"range":[1638,1638],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":56,"column":58,"nodeType":"JSXExpressionContainer","fix":{"range":[1664,1664],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":57,"column":25,"nodeType":"JSXAttribute","endLine":61,"endColumn":27,"fix":{"range":[1666,1690],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":57,"column":33,"nodeType":"JSXExpressionContainer","fix":{"range":[1699,1699],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":61,"column":26,"nodeType":"JSXExpressionContainer","fix":{"range":[1893,1893],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":64,"column":17,"nodeType":"JSXOpeningElement","endLine":64,"endColumn":27,"fix":{"range":[1961,1977],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":65,"column":21,"nodeType":"JSXOpeningElement","endLine":70,"endColumn":22,"fix":{"range":[1988,2008],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":66,"column":25,"nodeType":"JSXAttribute","endLine":66,"endColumn":38,"fix":{"range":[2021,2045],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":67,"column":25,"nodeType":"JSXAttribute","endLine":67,"endColumn":56,"fix":{"range":[2059,2083],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":67,"column":31,"nodeType":"JSXExpressionContainer","fix":{"range":[2090,2090],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":67,"column":55,"nodeType":"JSXExpressionContainer","fix":{"range":[2113,2113],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":68,"column":25,"nodeType":"JSXAttribute","endLine":68,"endColumn":84,"fix":{"range":[2115,2139],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":69,"column":25,"nodeType":"JSXAttribute","endLine":69,"endColumn":38,"fix":{"range":[2199,2223],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":72,"column":17,"nodeType":"JSXOpeningElement","endLine":72,"endColumn":27,"fix":{"range":[2301,2317],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":73,"column":21,"nodeType":"JSXOpeningElement","endLine":81,"endColumn":22,"fix":{"range":[2328,2348],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":74,"column":25,"nodeType":"JSXAttribute","endLine":74,"endColumn":41,"fix":{"range":[2363,2387],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":75,"column":25,"nodeType":"JSXAttribute","endLine":75,"endColumn":87,"fix":{"range":[2404,2428],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":76,"column":25,"nodeType":"JSXAttribute","endLine":76,"endColumn":59,"fix":{"range":[2491,2515],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":76,"column":31,"nodeType":"JSXExpressionContainer","fix":{"range":[2522,2522],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":76,"column":58,"nodeType":"JSXExpressionContainer","fix":{"range":[2548,2548],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":77,"column":25,"nodeType":"JSXAttribute","endLine":80,"endColumn":27,"fix":{"range":[2550,2574],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":77,"column":33,"nodeType":"JSXExpressionContainer","fix":{"range":[2583,2583],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":80,"column":26,"nodeType":"JSXExpressionContainer","fix":{"range":[2740,2740],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":83,"column":17,"nodeType":"JSXOpeningElement","endLine":83,"endColumn":27,"fix":{"range":[2808,2824],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":84,"column":21,"nodeType":"JSXOpeningElement","endLine":92,"endColumn":23,"fix":{"range":[2835,2855],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":84,"column":39,"nodeType":"JSXExpressionContainer","fix":{"range":[2874,2874],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":84,"column":44,"nodeType":"JSXExpressionContainer","fix":{"range":[2878,2878],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":84,"column":54,"nodeType":"JSXExpressionContainer","fix":{"range":[2889,2889],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":84,"column":59,"nodeType":"JSXExpressionContainer","fix":{"range":[2893,2893],"text":" "}},{"ruleId":"jsdoc/no-undefined-types","severity":1,"message":"The type 'React' is undefined.","line":86,"column":null,"nodeType":"Block","endLine":86,"endColumn":null},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":93,"column":25,"nodeType":"JSXExpressionContainer","fix":{"range":[3239,3239],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":93,"column":25,"nodeType":"JSXExpressionContainer","endLine":93,"endColumn":70,"fix":{"range":[3214,3238],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":93,"column":69,"nodeType":"JSXExpressionContainer","fix":{"range":[3282,3282],"text":" "}}],"errorCount":51,"warningCount":4,"fixableErrorCount":50,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport {Button, PanelBody, PanelRow, SelectControl, TextControl} from \"@wordpress/components\";\nimport {InspectorControls} from \"@wordpress/block-editor\";\nimport {__} from \"@wordpress/i18n\";\n\n/**\n * @typedef {{\n *   newPlanCurrency: string\n *   newPlanName: string\n *   newPlanPrice: string\n *   newPlanInterval: string\n * }} PlanAttributes\n *\n * @typedef {{\n *   label: string\n *   symbol: string\n * }} Currency\n *\n * @typedef {{\n *   attributes: PlanAttributes\n *   setAttributes: (attributes: Partial<PlanAttributes>) => void\n *   className: string\n *   savePlan: (attributes: PlanAttributes) => void\n *   currencies: Currency[]\n * }} Props\n *\n * @param {Props} props\n */\nexport default function Inspector( props ) {\n    const {\n        attributes,\n        setAttributes,\n        className,\n        savePlan,\n        currencies,\n    } = props;\n\n    return (\n        <InspectorControls>\n            <PanelBody title=\"Add a new subscription\" initialOpen={true} className={ `${className}---settings-add_plan` }>\n                <PanelRow>\n                    <TextControl\n                        id=\"new-plan-name\"\n                        label=\"Name\"\n                        value={attributes.newPlanName}\n                        autoFocus={ true }\n                        onChange={ (set) => setAttributes({ newPlanName : set }) }\n                    />\n                </PanelRow>\n                <PanelRow>\n                    <SelectControl\n                        label=\"Currency\"\n                        onChange={ (set) => setAttributes({ newPlanCurrency : set }) }\n                        value={attributes.newPlanCurrency}\n                        options={currencies.map(\n                            currency => (\n                                { label: currency.label, value: currency.label }\n                            )\n                        )}\n                    ></SelectControl>\n                </PanelRow>\n                <PanelRow>\n                    <TextControl\n                        label=\"Price\"\n                        value={attributes.newPlanPrice}\n                        onChange={ (set) => setAttributes({ newPlanPrice : set }) }\n                        type=\"number\"\n                    ></TextControl>\n                </PanelRow>\n                <PanelRow>\n                    <SelectControl\n                        label=\"Interval\"\n                        onChange={ (set) => setAttributes({ newPlanInterval : set }) }\n                        value={attributes.newPlanInterval}\n                        options={[\n                            { label: \"Month\", value: \"1 month\" },\n                            { label: \"Year\", value: \"1 year\" },\n                        ]}\n                    ></SelectControl>\n                </PanelRow>\n                <PanelRow>\n                    <Button isDefault={true} isLarge={true} onClick={\n                        /**\n                         * @param {React.MouseEvent<HTMLElement>} e\n                         */\n                        (e)=> {\n                            e.preventDefault();\n                            savePlan(props.attributes);\n                        }\n                    }>\n                        {__( 'Add subscription', 'premium-content' )}\n                    </Button>\n                </PanelRow>\n            </PanelBody>\n        </InspectorControls>\n    )\n}\n\nInspector.defaultProps = {\n    currencies: [\n        {\n            label: \"USD\",\n            symbol: \"$\",\n        },\n        {\n            label: \"GBP\",\n            symbol: \"&#163;\",\n        },\n        {\n            label: \"JPY\",\n            symbol: \"&#165;\",\n        },\n        {\n            label: \"BRL\",\n            symbol: \"R$\",\n        },\n        {\n            label: \"EUR\",\n            symbol: \"&#8364;\",\n        },\n        {\n            label: \"NZD\",\n            symbol: \"NZ$\",\n        },\n        {\n            label: \"AUD\",\n            symbol: \"A$\",\n        },\n        {\n            label: \"CAD\",\n            symbol: \"C$\",\n        },\n        {\n            label: \"INR\",\n            symbol: \"\\u20b9\",\n        },\n        {\n            label: \"ILS\",\n            symbol: \"\\u20aa\",\n        },\n        {\n            label: \"RUB\",\n            symbol: \"\\u20bd\",\n        },\n        {\n            label: \"MXN\",\n            symbol: \"MX$\",\n        },\n        {\n            label: \"SEK\",\n            symbol: \"SEK\",\n        },\n        {\n            label: \"HUF\",\n            symbol: \"Ft\",\n        },\n        {\n            label: \"CHF\",\n            symbol: \"CHF\",\n        },\n        {\n            label: \"CZK\",\n            symbol: \"K\\u010d\",\n        },\n        {\n            label: \"DKK\",\n            symbol: \"Dkr\",\n        },\n        {\n            label: \"HKD\",\n            symbol: \"HK$\",\n        },\n        {\n            label: \"NOK\",\n            symbol: \"Kr\",\n        },\n        {\n            label: \"PHP\",\n            symbol: \"\\u20b1\",\n        },\n        {\n            label: \"PLN\",\n            symbol: \"PLN\",\n        },\n        {\n            label: \"SGD\",\n            symbol: \"S$\",\n        },\n        {\n            label: \"TWD\",\n            symbol: \"NT$\",\n        },\n        {\n            label: \"THB\",\n            symbol: \"\\u0e3f\",\n        },\n        {\n            label: \"TRY\",\n            symbol: \"TL\",\n        }\n    ],\n}"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/new-plan.js","messages":[{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":14,"column":9,"nodeType":"JSXOpeningElement","endLine":14,"endColumn":20,"fix":{"range":[311,319],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":15,"column":13,"nodeType":"JSXOpeningElement","endLine":29,"endColumn":14,"fix":{"range":[331,343],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":16,"column":17,"nodeType":"JSXAttribute","endLine":28,"endColumn":18,"fix":{"range":[353,369],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":16,"column":25,"nodeType":"JSXExpressionContainer","fix":{"range":[378,378],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":29,"column":14,"nodeType":"JSXExpressionContainer","fix":{"range":[987,987],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":29,"column":64,"nodeType":"JSXExpressionContainer","fix":{"range":[1036,1036],"text":" "}}],"errorCount":6,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport {dispatch, select} from \"@wordpress/data\";\nimport {MenuGroup, MenuItem} from \"@wordpress/components\";\nimport {__} from \"@wordpress/i18n\";\n\n/**\n * @typedef {{ onClose: () => void}} Props\n * @param {Props} props\n */\nexport default function NewPlan( props ) {\n    return (\n        <MenuGroup>\n            <MenuItem\n                onClick={(e)=> {\n                    e.preventDefault();\n                    //Open the sidebar if not open\n                    if ( ! select( 'core/edit-post' ).isEditorSidebarOpened() ) {\n                        dispatch( 'core/edit-post' ).openGeneralSidebar( 'edit-post/block' );\n                    }\n                    const input = document.getElementById( 'new-plan-name' );\n                    if ( input !== null ) {\n                        //Focus on the new plan name input\n                        input.focus();\n                    }\n                    props.onClose();}\n                }\n            >{__( 'Add a new subscription', 'premium-content' )}</MenuItem>\n        </MenuGroup>\n    );\n}"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/plan.js","messages":[{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nid: number\ntitle: string\nprice: string\ncurrency: string\ninterval: string\n}","line":7,"column":null,"nodeType":"Block","endLine":7,"endColumn":null},{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nplan: Plan\nclassName: string\nselectedPlan?: Plan\nonClose: () => void\nonSelected: (plan: Plan) => void\n}","line":15,"column":null,"nodeType":"Block","endLine":15,"endColumn":null},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":39,"column":9,"nodeType":"JSXOpeningElement","endLine":50,"endColumn":10,"fix":{"range":[785,793],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":40,"column":13,"nodeType":"JSXAttribute","endLine":44,"endColumn":16,"fix":{"range":[803,815],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":40,"column":21,"nodeType":"JSXExpressionContainer","fix":{"range":[824,824],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":45,"column":13,"nodeType":"JSXAttribute","endLine":45,"endColumn":35,"fix":{"range":[946,958],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":45,"column":23,"nodeType":"JSXExpressionContainer","fix":{"range":[969,969],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":45,"column":34,"nodeType":"JSXExpressionContainer","fix":{"range":[979,979],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":46,"column":13,"nodeType":"JSXAttribute","endLine":46,"endColumn":26,"fix":{"range":[981,993],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":46,"column":17,"nodeType":"JSXExpressionContainer","fix":{"range":[998,998],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":46,"column":25,"nodeType":"JSXExpressionContainer","fix":{"range":[1005,1005],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":47,"column":13,"nodeType":"JSXAttribute","endLine":47,"endColumn":28,"fix":{"range":[1007,1019],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":47,"column":19,"nodeType":"JSXExpressionContainer","fix":{"range":[1026,1026],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":47,"column":27,"nodeType":"JSXExpressionContainer","fix":{"range":[1033,1033],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":48,"column":13,"nodeType":"JSXAttribute","endLine":48,"endColumn":34,"fix":{"range":[1035,1047],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":48,"column":22,"nodeType":"JSXExpressionContainer","fix":{"range":[1057,1057],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":48,"column":33,"nodeType":"JSXExpressionContainer","fix":{"range":[1067,1067],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":49,"column":13,"nodeType":"JSXAttribute","endLine":49,"endColumn":24,"fix":{"range":[1069,1081],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":49,"column":18,"nodeType":"JSXExpressionContainer","fix":{"range":[1087,1087],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":49,"column":23,"nodeType":"JSXExpressionContainer","fix":{"range":[1091,1091],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":50,"column":10,"nodeType":"JSXExpressionContainer","fix":{"range":[1103,1103],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":50,"column":21,"nodeType":"JSXExpressionContainer","fix":{"range":[1113,1113],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":50,"column":25,"nodeType":"JSXExpressionContainer","fix":{"range":[1118,1118],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":50,"column":36,"nodeType":"JSXExpressionContainer","fix":{"range":[1128,1128],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":50,"column":38,"nodeType":"JSXExpressionContainer","fix":{"range":[1131,1131],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":50,"column":52,"nodeType":"JSXExpressionContainer","fix":{"range":[1144,1144],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":50,"column":56,"nodeType":"JSXExpressionContainer","fix":{"range":[1149,1149],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":50,"column":70,"nodeType":"JSXExpressionContainer","fix":{"range":[1162,1162],"text":" "}}],"errorCount":26,"warningCount":2,"fixableErrorCount":26,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport {MenuItem} from \"@wordpress/components\";\n\n/**\n * @typedef {{\n *   id: number\n *   title: string\n *   price: string\n *   currency: string\n *   interval: string\n * }} Plan\n *\n * @typedef {{\n *  plan: Plan\n *  className: string\n *  selectedPlan?: Plan\n *  onClose: () => void\n *  onSelected: (plan: Plan) => void\n * }} Props\n *\n * @param {Props} props\n */\nexport default function Plan( props ) {\n    const {\n        className,\n        plan,\n        selectedPlan,\n        onSelected,\n        onClose,\n    } = props;\n\n    const isSelected = selectedPlan && ( plan.id === selectedPlan.id );\n    const classNames = (isSelected ? ['is-selected'] : []).concat( [ className ] ).join( ' ' );\n    const icon = isSelected ? 'yes' : undefined;\n\n    return (\n        <MenuItem\n            onClick={(e) => {\n                e.preventDefault();\n                onSelected(plan);\n                onClose();\n            } }\n            className={classNames}\n            key={plan.id}\n            value={plan.id}\n            selected={isSelected}\n            icon={icon}\n        >{plan.title} : {plan.price} {plan.currency} / {plan.interval}</MenuItem>\n    );\n}\n"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/plans.js","messages":[{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nplans: Array<Plan>\nselectedPlan?: Plan\nonSelected: (plan: Plan) => void\nonClose: () => void\nclassName: string\n}","line":14,"column":null,"nodeType":"Block","endLine":14,"endColumn":null},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":32,"column":9,"nodeType":"JSXOpeningElement","endLine":32,"endColumn":20,"fix":{"range":[520,528],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":33,"column":13,"nodeType":"JSXExpressionContainer","endLine":42,"endColumn":16,"fix":{"range":[540,552],"text":"\t"}},{"ruleId":"react/jsx-key","severity":2,"message":"Missing \"key\" prop for element in iterator","line":35,"column":21,"nodeType":"JSXElement","endLine":40,"endColumn":23},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":35,"column":21,"nodeType":"JSXOpeningElement","endLine":40,"endColumn":23,"fix":{"range":[591,611],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":36,"column":25,"nodeType":"JSXSpreadAttribute","endLine":36,"endColumn":37,"fix":{"range":[617,641],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":37,"column":25,"nodeType":"JSXAttribute","endLine":37,"endColumn":53,"fix":{"range":[654,678],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":37,"column":52,"nodeType":"JSXExpressionContainer","fix":{"range":[705,705],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":38,"column":25,"nodeType":"JSXAttribute","endLine":38,"endColumn":48,"fix":{"range":[707,731],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":38,"column":36,"nodeType":"JSXExpressionContainer","fix":{"range":[743,743],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":38,"column":47,"nodeType":"JSXExpressionContainer","fix":{"range":[753,753],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":39,"column":25,"nodeType":"JSXAttribute","endLine":39,"endColumn":36,"fix":{"range":[755,779],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":39,"column":30,"nodeType":"JSXExpressionContainer","fix":{"range":[785,785],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":39,"column":35,"nodeType":"JSXExpressionContainer","fix":{"range":[789,789],"text":" "}}],"errorCount":13,"warningCount":1,"fixableErrorCount":12,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport {MenuGroup} from \"@wordpress/components\";\n\n/**\n * Internal dependencies\n */\nimport Plan from './plan';\n\n/**\n * @typedef {import('./plan').Plan} Plan\n *\n * @typedef {{\n *  plans: Array<Plan>\n *  selectedPlan?: Plan\n *  onSelected: (plan: Plan) => void\n *  onClose: () => void\n *  className: string\n * }} Props\n *\n * @param {Props} props\n */\nexport default function Plans( props ) {\n    const {\n        plans,\n        selectedPlan,\n        onSelected,\n    } = props;\n\n    return (\n        <MenuGroup>\n            { plans.map(\n                plan => (\n                    <Plan\n                        { ...props }\n                        selectedPlan={ selectedPlan}\n                        onSelected={onSelected}\n                        plan={plan}\n                    />\n                )\n            ) }\n        </MenuGroup>\n    );\n}"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/save.js","messages":[{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":11,"column":9,"nodeType":"JSXOpeningElement","endLine":11,"endColumn":61,"fix":{"range":[165,173],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":12,"column":13,"nodeType":"JSXOpeningElement","endLine":12,"endColumn":36,"fix":{"range":[226,238],"text":"\t"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport {InnerBlocks} from '@wordpress/block-editor';\n\n/**\n * Block Save function\n */\nexport default function Save() {\n    return (\n        <div className=\"wp-block-premium-content-container\">\n            <InnerBlocks.Content />\n        </div>\n    );\n}\n"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/tab.js","messages":[{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nid: string\nlabel: (React.ReactNode | string)\nclassName: string\n}","line":4,"column":null,"nodeType":"Block","endLine":4,"endColumn":null},{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\ntab: Tab\nselectedTab: Tab\nclassName: string\nlabel: React.ReactNode\nonSelected: (tab: Tab) => void\n}","line":10,"column":null,"nodeType":"Block","endLine":10,"endColumn":null},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":31,"column":9,"nodeType":"JSXOpeningElement","endLine":31,"endColumn":96,"fix":{"range":[561,569],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":31,"column":39,"nodeType":"JSXExpressionContainer","fix":{"range":[600,600],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":31,"column":59,"nodeType":"JSXExpressionContainer","fix":{"range":[619,619],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":31,"column":71,"nodeType":"JSXExpressionContainer","fix":{"range":[632,632],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":31,"column":94,"nodeType":"JSXExpressionContainer","fix":{"range":[654,654],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":32,"column":13,"nodeType":"JSXExpressionContainer","fix":{"range":[670,670],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":32,"column":13,"nodeType":"JSXExpressionContainer","endLine":32,"endColumn":20,"fix":{"range":[657,669],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":32,"column":19,"nodeType":"JSXExpressionContainer","fix":{"range":[675,675],"text":" "}}],"errorCount":8,"warningCount":2,"fixableErrorCount":8,"fixableWarningCount":0,"source":"\n/**\n *\n * @typedef {{\n *   id: string\n *   label: (React.ReactNode | string)\n *   className: string\n * }} Tab\n *\n * @typedef {{\n *   tab: Tab\n *   selectedTab: Tab\n *   className: string\n *   label: React.ReactNode\n *   onSelected: (tab: Tab) => void\n * }} Props\n * @param {Props} props\n */\nexport default function Tab( props ) {\n    const {\n        className,\n        tab,\n        label,\n        selectedTab,\n        onSelected,\n    } = props;\n\n    const classNames = ( tab.id === selectedTab.id ? ['is-selected'] : []).concat( [ className ] );\n\n    return (\n        <button type=\"button\" onClick={()=>onSelected(tab)} className={classNames.join( ' ' )}>\n            {label}\n        </button>\n    );\n}\n"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/container/tabs.js","messages":[{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nclassName: string\nselectedTab: Tab\ntabs: Array<Tab>\nonSelected: (tab: Tab) => void\n}","line":8,"column":null,"nodeType":"Block","endLine":8,"endColumn":null},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":25,"column":9,"nodeType":"JSXOpeningElement","endLine":25,"endColumn":47,"fix":{"range":[414,422],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":26,"column":13,"nodeType":"JSXExpressionContainer","endLine":37,"endColumn":16,"fix":{"range":[461,473],"text":"\t"}},{"ruleId":"react/jsx-key","severity":2,"message":"Missing \"key\" prop for element in iterator","line":28,"column":21,"nodeType":"JSXElement","endLine":35,"endColumn":23},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":28,"column":21,"nodeType":"JSXOpeningElement","endLine":35,"endColumn":23,"fix":{"range":[510,530],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":29,"column":25,"nodeType":"JSXSpreadAttribute","endLine":29,"endColumn":37,"fix":{"range":[535,559],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":30,"column":25,"nodeType":"JSXAttribute","endLine":30,"endColumn":34,"fix":{"range":[572,596],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":30,"column":29,"nodeType":"JSXExpressionContainer","fix":{"range":[601,601],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":30,"column":33,"nodeType":"JSXExpressionContainer","fix":{"range":[604,604],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":31,"column":25,"nodeType":"JSXAttribute","endLine":31,"endColumn":50,"fix":{"range":[606,630],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":31,"column":37,"nodeType":"JSXExpressionContainer","fix":{"range":[643,643],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":31,"column":49,"nodeType":"JSXExpressionContainer","fix":{"range":[654,654],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":32,"column":25,"nodeType":"JSXAttribute","endLine":32,"endColumn":56,"fix":{"range":[656,680],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":32,"column":35,"nodeType":"JSXExpressionContainer","fix":{"range":[691,691],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":32,"column":55,"nodeType":"JSXExpressionContainer","fix":{"range":[710,710],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":33,"column":25,"nodeType":"JSXAttribute","endLine":33,"endColumn":42,"fix":{"range":[712,736],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":33,"column":31,"nodeType":"JSXExpressionContainer","fix":{"range":[743,743],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":33,"column":41,"nodeType":"JSXExpressionContainer","fix":{"range":[752,752],"text":" "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":34,"column":25,"nodeType":"JSXAttribute","endLine":34,"endColumn":48,"fix":{"range":[754,778],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":34,"column":36,"nodeType":"JSXExpressionContainer","fix":{"range":[790,790],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":34,"column":47,"nodeType":"JSXExpressionContainer","fix":{"range":[800,800],"text":" "}}],"errorCount":20,"warningCount":1,"fixableErrorCount":19,"fixableWarningCount":0,"source":"/**\n * Internal dependencies\n */\nimport Tab from './tab';\n\n/**\n * @typedef {import('./tab').Tab} Tab\n * @typedef {{\n *   className: string\n *   selectedTab: Tab\n *   tabs: Array<Tab>\n *   onSelected: (tab: Tab) => void\n * }} Props\n * @param {Props} props\n */\nexport default function Tabs( props ) {\n    const {\n        className,\n        tabs,\n        selectedTab,\n        onSelected,\n    } = props;\n\n    return (\n        <div className=\"premium-content-tabs\">\n            { tabs.map(\n                tab => (\n                    <Tab\n                        { ...props }\n                        tab={tab}\n                        selectedTab={selectedTab}\n                        className={`${className}--tab`}\n                        label={tab.label}\n                        onSelected={onSelected}\n                    />\n                )\n            ) }\n        </div>\n    );\n}\n"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/logged-out-view/edit.js","messages":[{"ruleId":"no-duplicate-imports","severity":2,"message":"'@wordpress/block-editor' import is duplicated.","line":6,"column":1,"nodeType":"ImportDeclaration","messageId":"import","endLine":8,"endColumn":34},{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nreadonly isSelected: boolean\nreadonly className: string\nreadonly attributes: Attributes\nreadonly setAttributes: (attributes: Partial<Attributes>) => void\n}","line":20,"column":null,"nodeType":"Block","endLine":20,"endColumn":null},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":31,"column":9,"nodeType":"JSXOpeningElement","endLine":31,"endColumn":27,"fix":{"range":[623,631],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":32,"column":13,"nodeType":"JSXExpressionContainer","fix":{"range":[663,663],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":32,"column":13,"nodeType":"JSXExpressionContainer","endLine":57,"endColumn":15,"fix":{"range":[650,662],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":33,"column":17,"nodeType":"JSXOpeningElement","endLine":33,"endColumn":147,"fix":{"range":[714,730],"text":"\t"}},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":33,"column":17,"nodeType":"JSXOpeningElement","endLine":33,"endColumn":147},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Static HTML elements with event handlers require a role.","line":33,"column":17,"nodeType":"JSXOpeningElement","endLine":33,"endColumn":147},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":33,"column":29,"nodeType":"JSXExpressionContainer","fix":{"range":[743,743],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":33,"column":58,"nodeType":"JSXExpressionContainer","fix":{"range":[771,771],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":33,"column":68,"nodeType":"JSXExpressionContainer","fix":{"range":[782,782],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":33,"column":109,"nodeType":"JSXExpressionContainer","fix":{"range":[822,822],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":34,"column":21,"nodeType":"JSXOpeningElement","endLine":41,"endColumn":26,"fix":{"range":[861,881],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":34,"column":47,"nodeType":"JSXExpressionContainer","fix":{"range":[908,908],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":34,"column":53,"nodeType":"JSXExpressionContainer","fix":{"range":[913,913],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":34,"column":64,"nodeType":"JSXExpressionContainer","fix":{"range":[925,925],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":41,"column":22,"nodeType":"JSXExpressionContainer","fix":{"range":[1321,1321],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 5.","line":42,"column":6,"nodeType":"JSXOpeningElement","endLine":42,"endColumn":143,"fix":{"range":[1326,1331],"text":"\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 7 tab characters but found 0.","line":44,"column":29,"nodeType":"JSXAttribute","endLine":44,"endColumn":75,"fix":{"range":[1485,1513],"text":"\t\t\t\t\t\t\t"}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 7 tab characters but found 0.","line":45,"column":29,"nodeType":"JSXAttribute","endLine":45,"endColumn":112,"fix":{"range":[1560,1588],"text":"\t\t\t\t\t\t\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 5.","line":49,"column":6,"nodeType":"JSXOpeningElement","endLine":49,"endColumn":143,"fix":{"range":[1723,1728],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":57,"column":14,"nodeType":"JSXExpressionContainer","fix":{"range":[2106,2106],"text":" "}}],"errorCount":21,"warningCount":1,"fixableErrorCount":18,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport {InnerBlocks} from '@wordpress/block-editor';\nimport {__} from \"@wordpress/i18n\";\nimport {\n\tRichText,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport Context from '../container/context';\n\n\n/**\n * Block edit function\n *\n * @typedef { import('./').Attributes } Attributes\n * @typedef {{\n *   readonly isSelected: boolean\n *   readonly className: string\n *   readonly attributes: Attributes\n *   readonly setAttributes: (attributes: Partial<Attributes>) => void\n * }} Props\n *\n * @param {Props} props\n */\nexport default function Edit( props ) {\n    return (\n        <Context.Consumer>\n            {({ selectedTab, selectedInnerBlockCallback }) => (\n                <div hidden={selectedTab.id === 'premium'} onClick={() => selectedInnerBlockCallback( true )} className={ selectedTab.className }>\n                    <InnerBlocks templateLock={false} template={[\n                        [\n                            'core/heading', { 'content': __('Subscribe to get access', 'premium-content' ), 'level' : 3 }\n                        ],\n                        [\n                            'core/paragraph', { 'content': __('This content is for subscribers. Signup for access today.', 'premium-content' ) }\n                        ],\n                    ]} />\n\t\t\t\t\t<div className=\"wp-block-button rich-text block-editor-rich-text__editable wp-block-button__link premium-content-logged-out-view-button\">\n\t\t\t\t\t\t<RichText\n                            value={ props.attributes.subscribeButtonText }\n                            onChange={ nextValue => props.setAttributes( { subscribeButtonText: nextValue } ) }\n\t\t\t\t\t\t\tkeepPlaceholderOnFocus\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"wp-block-button rich-text block-editor-rich-text__editable wp-block-button__link premium-content-logged-out-view-button\">\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tvalue={ props.attributes.loginButtonText }\n\t\t\t\t\t\t\tonChange={ nextValue => props.setAttributes( { loginButtonText: nextValue } ) }\n\t\t\t\t\t\t\tkeepPlaceholderOnFocus\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n                </div>\n            )}\n        </Context.Consumer>\n    );\n}"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/logged-out-view/index.js","messages":[{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nsubscribeButtonText: string\nloginButtonText: string\n}","line":15,"column":null,"nodeType":"Block","endLine":15,"endColumn":null},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":23,"column":5,"nodeType":"Property","endLine":23,"endColumn":15,"fix":{"range":[483,493],"text":"name"}},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":24,"column":5,"nodeType":"Property","endLine":24,"endColumn":23,"fix":{"range":[499,517],"text":"category"}}],"errorCount":2,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":0,"source":"/**\n * Internal dependencies\n */\nimport edit from './edit';\nimport save from './save';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nconst name = 'premium-content/logged-out-view';\nconst category = 'common';\n/**\n * @typedef {{\n *   subscribeButtonText: string\n *   loginButtonText: string\n * }} Attributes\n * @typedef {import('@wordpress/blocks').BlockConfiguration<Attributes>} BlockConfiguration\n * @type {BlockConfiguration}\n */\nconst settings = {\n    name: name,\n    category: category,\n    attributes: {\n        subscribeButtonText: {\n            type: 'string',\n            default: 'Subscribe to unlock access'\n        },\n\t\tloginButtonText: {\n            type: 'string',\n            default: 'Log me in - I already purchased access'\n        }\n    },\n\n    /* translators: block name */\n    title: __( 'Logged Out View', 'premium-content' ),\n    /* translators: block description */\n    description: __( 'Logged Out View.', 'premium-content' ),\n    parent: [ 'premium-content/container' ],\n    supports: {\n        // Hide this block from the inserter.\n        inserter: false,\n    },\n    edit,\n    save,\n};\n\nexport { name, category, settings };"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/logged-out-view/save.js","messages":[{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":11,"column":9,"nodeType":"JSXOpeningElement","endLine":11,"endColumn":67,"fix":{"range":[165,173],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":12,"column":13,"nodeType":"JSXOpeningElement","endLine":12,"endColumn":36,"fix":{"range":[232,244],"text":"\t"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport {InnerBlocks} from \"@wordpress/block-editor\";\n\n/**\n * Block Save function\n */\nexport default function Save() {\n    return (\n        <div className=\"wp-block-premium-content-logged-out-view\">\n            <InnerBlocks.Content />\n        </div>\n    );\n}\n"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/subscriber-view/edit.js","messages":[{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":17,"column":9,"nodeType":"JSXOpeningElement","endLine":17,"endColumn":27,"fix":{"range":[279,287],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":18,"column":13,"nodeType":"JSXExpressionContainer","endLine":28,"endColumn":14,"fix":{"range":[306,318],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":20,"column":17,"nodeType":"JSXOpeningElement","endLine":20,"endColumn":144,"fix":{"range":[387,403],"text":"\t"}},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":20,"column":17,"nodeType":"JSXOpeningElement","endLine":20,"endColumn":144},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Static HTML elements with event handlers require a role.","line":20,"column":17,"nodeType":"JSXOpeningElement","endLine":20,"endColumn":144},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":20,"column":29,"nodeType":"JSXExpressionContainer","fix":{"range":[416,416],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":20,"column":55,"nodeType":"JSXExpressionContainer","fix":{"range":[441,441],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":20,"column":65,"nodeType":"JSXExpressionContainer","fix":{"range":[452,452],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":20,"column":106,"nodeType":"JSXExpressionContainer","fix":{"range":[492,492],"text":" "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":21,"column":21,"nodeType":"JSXOpeningElement","endLine":25,"endColumn":26,"fix":{"range":[531,551],"text":"\t"}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":21,"column":47,"nodeType":"JSXExpressionContainer","fix":{"range":[578,578],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":21,"column":53,"nodeType":"JSXExpressionContainer","fix":{"range":[583,583],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required after '{'","line":21,"column":64,"nodeType":"JSXExpressionContainer","fix":{"range":[595,595],"text":" "}},{"ruleId":"react/jsx-curly-spacing","severity":2,"message":"A space is required before '}'","line":25,"column":22,"nodeType":"JSXExpressionContainer","fix":{"range":[790,790],"text":" "}}],"errorCount":14,"warningCount":0,"fixableErrorCount":12,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport {InnerBlocks} from '@wordpress/block-editor';\nimport {__} from \"@wordpress/i18n\";\n\n/**\n * Internal dependencies\n */\nimport Context from '../container/context';\n\n/**\n * Block edit function\n */\nexport default function Edit() {\n    return (\n        <Context.Consumer>\n            {\n                ({ selectedTab, selectedInnerBlockCallback }) => (\n                <div hidden={selectedTab.id === 'wall'} onClick={() => selectedInnerBlockCallback( true )} className={ selectedTab.className }>\n                    <InnerBlocks templateLock={false} template={[\n                        [\n                            'core/paragraph', { 'placeholder': __( 'Enter your premium content', 'premium-content' ) }\n                        ],\n                    ]} />\n                </div>\n                )\n            }\n        </Context.Consumer>\n    );\n}\n"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/subscriber-view/index.js","messages":[{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":15,"column":5,"nodeType":"Property","endLine":15,"endColumn":15,"fix":{"range":[259,269],"text":"name"}},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":16,"column":5,"nodeType":"Property","endLine":16,"endColumn":23,"fix":{"range":[275,293],"text":"category"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"/**\n * Internal dependencies\n */\nimport edit from './edit';\nimport save from './save';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nconst name = 'premium-content/subscriber-view';\nconst category = 'common';\nconst settings = {\n    name: name,\n    category: category,\n    attributes: {},\n\n    /* translators: block name */\n    title: __( 'Subscriber View', 'premium-content' ),\n    /* translators: block description */\n    description: __( 'Subscriber View.', 'premium-content' ),\n    parent: [ 'premium-content/container' ],\n    supports: {\n        // Hide this block from the inserter.\n        inserter: false,\n    },\n    edit,\n    save,\n};\n\nexport { name, category, settings };\n"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/blocks/subscriber-view/save.js","messages":[{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":11,"column":9,"nodeType":"JSXOpeningElement","endLine":11,"endColumn":67,"fix":{"range":[165,173],"text":"\t"}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 1 tab character but found 0.","line":12,"column":13,"nodeType":"JSXOpeningElement","endLine":12,"endColumn":36,"fix":{"range":[232,244],"text":"\t"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport {InnerBlocks} from '@wordpress/block-editor';\n\n/**\n * Block Save function\n */\nexport default function Save() {\n    return (\n        <div className=\"wp-block-premium-content-subscriber-view\">\n            <InnerBlocks.Content />\n        </div>\n    );\n}\n"},{"filePath":"/Users/beau/code/wp-earn/sandbox/src/mu-plugins/premium-content/src/index.js","messages":[{"ruleId":"jsdoc/valid-types","severity":1,"message":"Syntax error in type: {\nname: string\ncategory: string\nsettings: BlockConfiguration\n}","line":18,"column":null,"nodeType":"Block","endLine":18,"endColumn":null}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * WordPress dependencies\n */\nimport {\n\tregisterBlockType,\n} from '@wordpress/blocks';\n\n// Register Blocks\nimport * as container from './blocks/container';\nimport * as subscriberView from './blocks/subscriber-view';\nimport * as loggedOutView from './blocks/logged-out-view';\n\n/**\n * Function to register an individual block.\n *\n * @typedef {import('@wordpress/blocks').BlockConfiguration} BlockConfiguration\n *\n * @typedef {{\n *  name: string\n *  category: string\n *  settings: BlockConfiguration\n * }} Block\n * @param {Block} block The block to be registered.\n */\nconst registerBlock = ( block ) => {\n\tif ( ! block ) {\n\t\treturn;\n\t}\n\n\tconst { name, category, settings } = block;\n\n\tregisterBlockType( name, {\n\t\tcategory,\n\t\t...settings,\n\t} );\n};\n\n/**\n * Function to register blocks provided by CoBlocks.\n */\nexport const registerPremiumContentBlocks = () => {\n\t[\n\t\tcontainer,\n\t\tloggedOutView,\n\t\tsubscriberView\n\t].forEach( registerBlock );\n};\n\nregisterPremiumContentBlocks();\n"}]